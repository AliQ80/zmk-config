/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mo_tog: mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;

            label = "MO_TOG";
        };

        mo_sk: mo_sk {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sk>;

            label = "MO_SK";
        };

        td_shm2t2: td_shm2t2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHM2T2";
            #binding-cells = <0>;
            bindings = <&mo_sk 2 LSHIFT>, <&tog 2>;
        };

        td_shm3cw: td_shm3cw {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHM3CW";
            #binding-cells = <0>;
            bindings = <&mo_sk 3 LSHIFT>, <&caps_word>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            label = "EMAIL";
            #binding-cells = <0>;
            bindings = <&kp A &kp K &kp AT &kp A &kp L &kp I &kp K &kp A &kp R &kp A &kp M &kp DOT &kp C &kp O &kp M>;
        };

        speak: speak {
            compatible = "zmk,behavior-macro";
            label = "SPEAK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp ESCAPE>,
                <&macro_release>,
                <&kp LALT>;
        };

        scr_shot: scr_shot {
            compatible = "zmk,behavior-macro";
            label = "SCR_SHOT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp RIGHT_GUI>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp RIGHT_GUI>;
        };

        arabic_mac: arabic_mac {
            compatible = "zmk,behavior-macro";
            label = "ARABIC_MAC";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_wait_time 1000>,
                <&macro_release>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&tog 1>;
        };

        lang_lx: lang_lx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(SPACE)>, <&macro_wait_time 500>, <&tog 1>;

            label = "LANG_LX";
        };

        mc_bt0: mc_bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&rgb_ug RGB_TOG>,
                <&macro_wait_time 500>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>,
                <&rgb_ug RGB_TOG>;

            label = "MC_BT0";
        };

        mc_bt1: mc_bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&rgb_ug RGB_TOG>,
                <&macro_wait_time 500>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&rgb_ug RGB_TOG>;

            label = "MC_BT1";
        };
    };

    combos {
        compatible = "zmk,combos";

        tog5_combo {
            bindings = <&tog 1>;
            key-positions = <40 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp ESC        &kp Q       &kp W           &kp F        &kp P             &kp B             &kp J  &kp L              &kp U        &kp Y            &kp SEMI    &kp SQT
&kp BACKSPACE  &hm LGUI A  &hm LEFT_ALT R  &hm LCTRL S  &hm LEFT_SHIFT T  &kp G             &kp M  &hm RIGHT_SHIFT N  &hm RCTRL E  &hm RIGHT_ALT I  &hm RGUI O  &kp RC(BACKSPACE)
&kp TAB        &kp Z       &kp X           &kp C        &kp D             &kp V             &kp K  &kp H              &kp COMMA    &kp DOT          &kp FSLH    &kp ENTER
                                           &sl 5        &td_shm2t2               &kp SPACE         &td_shm3cw         &lang_lx
            >;

            label = "Default";
        };

        arabic_layer {
            bindings = <
&kp Q   &kp W       &kp E       &kp R        &kp T         &kp Y             &kp U  &kp I         &kp O        &kp P       &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans  &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHIFT F  &kp G             &kp H  &hm RSHIFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMI     &trans
&trans  &kp Z       &kp X       &kp C        &kp V         &kp B             &kp N  &kp M         &kp COMMA    &kp DOT     &kp FSLH          &trans
                                &trans       &trans               &kp SPACE         &trans        &trans
            >;

            label = "Arabic";
        };

        lower_layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&trans  &kp EXCL   &kp AT    &kp HASH   &kp DLLR           &kp PRCNT             &kp SLASH  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &kp EQUAL
&trans  &kp CARET  &kp AMPS  &kp COLON  &kp DOUBLE_QUOTES  &kp PIPE              &kp ASTRK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &trans
&trans  &kp LGUI   &kp LALT  &kp LCTRL  &kp LSHIFT         &kp CAPS              &kp UNDER  &kp N1        &kp NUMBER_2  &kp NUMBER_3  &none      &trans
                             &trans     &trans                        &kp SPACE             &kp NUMBER_0  &kp DOT
            >;

            label = "Lower";
        };

        raise_layer {
            // --------------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |        |   7   |   UP    |   9    |   0   |  DEL  |
            // |    |  -  |  =  |  [  |  ]  |  \  |   |  HOME  |  LFT  |   DWN   |  RGT   |  END  |  F6   |
            // |    | ESC | GUI | ALT | CAPS|  "  |   |        | VOLUP |  VOLDN  |  MUTE  |       |       |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&kp ESCAPE        &email  &none           &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GRAVE            &speak       &scr_shot     &kp UP        &none       &kp PAGE_UP    &kp DEL
&kp LEFT_CONTROL  &none   &none           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSLH             &kp HOME     &kp LEFT      &kp DOWN      &kp RIGHT   &kp END        &none
&trans            &none   &kp C_AC_PRINT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE            &arabic_mac  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &kp PAGE_DOWN  &none
                                          &trans                &trans                            &kp BSPC               &trans        &trans
            >;

            label = "Raise";
        };

        adjust_layer {
            // ---------------------------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   |       |     |     |     |     |        |
            //                                           |     |     |     |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none   &rgb_ug RGB_TOG         &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &none   &none                   &none         &ext_power EP_ON  &ext_power EP_OFF  &soft_off     &none         &none
&none            &none            &none            &none            &none   &mo 6                   &none         &none             &none              &none         &none         &none
                                                   &trans           &trans                   &none                &trans            &trans
            >;

            label = "Adjust";
        };

        dup_adjust_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans          &trans          &trans  &trans
            >;

            label = "Duplicate Adjust";
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------
            // |  | F1 | F2  | F3  |  F4   |     |          |     |     |   |   |   |   |
            // |  | F5 | F6  | F7  |  F8   |     |          |     |     |   |   |   |   |
            // |  | F9 | F10 | F11 |  F12  |     |          |     |     |   |   |   |   |
            //                     |       |     |          |     |     |

            bindings = <
&none  &none  &none  &none   &none   &none         &none   &kp F9  &kp F10  &kp F11  &kp F12  &none
&none  &none  &none  &none   &none   &none         &none   &kp F5  &kp F6   &kp F7   &kp F8   &none
&none  &none  &none  &none   &none   &none         &trans  &kp F1  &kp F2   &kp F3   &kp F4   &none
                     &trans  &trans         &none          &trans  &trans
            >;

            label = "Function";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        L2_L3 {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
